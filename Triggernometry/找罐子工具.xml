<?xml version="1.0"?>
<TriggernometryExport PluginVersion="1.2.0.753">
  <ExportedFolder FFXIVZoneFilterEnabled="True" FfxivZoneFilterRegularExpression="^1252$" Id="8a0b5a74-2c79-41fd-a8d7-663742e54da9" Name="找罐子工具" Enabled="true">
    <Folders />
    <Triggers>
      <Trigger Enabled="true" Name="1b.南边罐子" Id="8146516c-5db4-4414-9a4a-b7d5a83a520c" RegularExpression="(?&lt;timestamp&gt;^.{14}) 258 (?&lt;type&gt;102):(?&lt;category&gt;Remove):[^:]*:(?&lt;fateId&gt;000007B9):(?&lt;progress&gt;[^:]*)(?:$|:)">
        <Actions>
          <Action OrderNumber="1" UseTTSTextExpression="南边结束" VariableOp="SetString" VariableName="guan" VariableExpression="-195.4419,-287.8911,110.15342;74.73397,-394.1289,110.494316;-386.437,-221.7847,98.60658;-554.6146,-309.1231,99.01769;107.0611,146.7059,105.699875;825.9521,772.4054,70;-836.7586,597.2944,106.999985;67.45271,745.8658,69.477974;69.70596,-239.064,111.56108;301.8741,70.59854,103.784424;-38.97946,-175.4589,102.073296;-60.72729,828.4997,69.687035;17.60418,674.6207,65.93209;393.2685,844.6924,57.545956;393.0191,-124.1651,104;-798.7886,-4.822005,84.22545;440.8355,876.4097,70.3;-734.1434,683.7238,170.99998;423.3505,578.9013,70.3;200.1241,624.2285,56;-603.3457,858.6771,139;-829.598,66.82948,62.66814;-645.3027,-73.54771,135.69208;-836.1612,770.2822,107;-676.6202,1.531581,128.57442;-713.6796,710.08,203;781.2514,560.0701,70;-746.1318,828.8809,172.00023;-730.5441,-371.4776,107.694275;-810.8279,-226.8324,114.053925" ActionType="Variable">
            <Condition Enabled="true" Grouping="Or">
              <ConditionSingle Enabled="true" ExpressionL="${_me.HasStatus(1531)}" ExpressionTypeL="Numeric" ExpressionR="1" ExpressionTypeR="Numeric" ConditionType="StringEqualNocase" />
            </Condition>
          </Action>
        </Actions>
      </Trigger>
      <Trigger Enabled="true" Name="1a.北边罐子" Id="72c0a962-d0a7-4f9c-bd81-679e0f70c517" RegularExpression="(?&lt;timestamp&gt;^.{14}) 258 (?&lt;type&gt;102):(?&lt;category&gt;Remove):[^:]*:(?&lt;fateId&gt;000007B8):(?&lt;progress&gt;[^:]*)(?:$|:)">
        <Actions>
          <Action OrderNumber="1" UseTTSTextExpression="南边结束" VariableOp="SetString" VariableName="guan" VariableExpression="571.5841,-813.1642,51.451305;662.4388,161.1339,120;606.4641,184.8517,108.07402;-312.2778,-35.25348,103.19944;587.7039,-545.8168,78.8956;891.2597,-20.672,120;878.1131,-91.1057,108.28959;803.6609,-354.1809,95.99998;341.4413,194.7507,95.99999;570.2421,272.1734,64.66201;-216.372,-510.1361,5.4469404;684.4223,-165.4811,96.10129;-188.1745,-717.2005,2.999999;-476.3011,-86.69939,101.44228;80.19762,391.2263,101.27949;-534.6993,-651.6244,2.999998;-165.2374,437.4505,95.33837;330.8659,-654.5339,6.7168036;-333.3444,-861.1722,2.9999998;-313.2906,70.76207,108.10962;-459.1735,5.054043,93.57443;-54.69518,405.0261,99.40573;-382.4396,-378.3482,109.30187;263.2559,326.6834,100.38499;224.7233,518.668,68.7328;19.73968,-420.977,26.045855;705.2716,358.6714,68.143616;-660.5336,-216.7666,98;-324.2736,203.2017,121;-386.5904,-461.0976,-0.13994062" ActionType="Variable">
            <Condition Enabled="true" Grouping="Or">
              <ConditionSingle Enabled="true" ExpressionL="${_me.HasStatus(1531)}" ExpressionTypeL="Numeric" ExpressionR="1" ExpressionTypeR="Numeric" ConditionType="StringEqualNocase" />
            </Condition>
          </Action>
        </Actions>
      </Trigger>
      <Trigger Enabled="true" Name="2.记录坐标" Id="edd14d7b-e275-49b5-806e-59152372edcd" RegularExpression="(?&lt;timestamp&gt;^.{14}) (?:ActionEffect|AOEActionEffect) (?&lt;type&gt;(?:15|16)):(?&lt;sourceId&gt;[^:]*):(?&lt;source&gt;[^:]*):(?&lt;id&gt;C44):(?&lt;ability&gt;(?:[^:]|: )*?):(?&lt;targetId&gt;[^:]*):(?&lt;target&gt;[^:]*):(?&lt;flags&gt;[^:]*):(?&lt;damage&gt;[^:]*)(?::[^:]*){14}:(?&lt;targetCurrentHp&gt;[^:]*):(?&lt;targetMaxHp&gt;[^:]*):(?&lt;targetCurrentMp&gt;[^:]*):(?&lt;targetMaxMp&gt;[^:]*)(?::[^:]*){2}:(?&lt;targetX&gt;[^:]*):(?&lt;targetY&gt;[^:]*):(?&lt;targetZ&gt;[^:]*):(?&lt;targetHeading&gt;[^:]*):(?&lt;currentHp&gt;[^:]*):(?&lt;maxHp&gt;[^:]*):(?&lt;currentMp&gt;[^:]*):(?&lt;maxMp&gt;[^:]*)(?::[^:]*){2}:(?&lt;x&gt;[^:]*):(?&lt;y&gt;[^:]*):(?&lt;z&gt;[^:]*):(?&lt;heading&gt;[^:]*):(?&lt;sequence&gt;[^:]*):(?&lt;targetIndex&gt;[^:]*):(?&lt;targetCount&gt;[^:]*):(?&lt;ownerId&gt;[^:]*):(?&lt;ownerName&gt;[^:]*):(?&lt;effectDisplayType&gt;[^:]*):(?&lt;actionId&gt;[^:]*):(?&lt;actionAnimationId&gt;[^:]*):(?&lt;animationLockTime&gt;[^:]*):(?&lt;rotationHex&gt;[^:]*)(?:$|:)">
        <Actions>
          <Action OrderNumber="1" VariableOp="SetNumeric" VariableName="guanPosX" VariableExpression="${x}" ActionType="Variable" />
          <Action OrderNumber="2" VariableOp="SetNumeric" VariableName="guanPosY" VariableExpression="${y}" ActionType="Variable" />
        </Actions>
        <Condition Enabled="true" Grouping="Or">
          <ConditionSingle Enabled="true" ExpressionL="${sourceId}" ExpressionTypeL="String" ExpressionR="${_me.id}" ExpressionTypeR="String" ConditionType="StringEqualCase" />
        </Condition>
      </Trigger>
      <Trigger Enabled="true" Name="3.处理并标点" Id="fa17db8d-c250-442c-bc33-fc6431ef1b3e" RegularExpression="(?&lt;timestamp&gt;^.{14}) SystemLogMessage (?&lt;type&gt;29):(?&lt;instance&gt;8004002D):(?&lt;id&gt;[^:]*):(?&lt;param0&gt;01):(?&lt;param1&gt;[^:]*):(?&lt;param2&gt;[^:]*)(?:$|:)">
        <Actions>
          <Action OrderNumber="1" ExecScriptExpression="using System;&#xD;&#xA;using Triggernometry;&#xD;&#xA;using Triggernometry.Variables;&#xD;&#xA;&#xD;&#xA;// 1. 从触发器变量 v:guan 中获取原始坐标数据&#xD;&#xA;//    ${v:guan} 是框架语法，用于读取名为 &quot;guan&quot; 的标量变量值&#xD;&#xA;string rawData = $&quot;${v:guan}&quot;;&#xD;&#xA;&#xD;&#xA;// 2. 将原始数据按分号分隔，解析为坐标字符串数组&#xD;&#xA;//    假设原始数据格式为 &quot;x1,y1,z1;x2,y2,z2;...&quot;&#xD;&#xA;string[] coordArray = rawData.Split(';');&#xD;&#xA;&#xD;&#xA;// 3. 特殊情况处理：如果只有一组有效坐标，无需处理直接终止&#xD;&#xA;//    条件：数组长度为1且唯一元素不为空（排除空字符串或仅空格的情况）&#xD;&#xA;if (coordArray.Length == 1 &amp;&amp; !string.IsNullOrEmpty(coordArray[0]))&#xD;&#xA;{&#xD;&#xA;    // 直接返回，终止后续所有处理（不清除标记，不更新变量）&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// 4. 清除历史标记：当坐标数量大于1时，先清除之前在地图上标记的点位&#xD;&#xA;//    构造清空标记的JSON参数（A/B/C/D等所有标记位设为空对象）&#xD;&#xA;string json = &quot;{\&quot;A\&quot;: {}, \&quot;B\&quot;: {}, \&quot;C\&quot;: {}, \&quot;D\&quot;: {}, \&quot;One\&quot;: {}, \&quot;Two\&quot;: {}, \&quot;Three\&quot;: {}, \&quot;Four\&quot;: {}}&quot;;&#xD;&#xA;// 调用框架的 &quot;place&quot; 回调函数执行清除操作&#xD;&#xA;RealPlugin.plug.InvokeNamedCallback(&quot;place&quot;, json);&#xD;&#xA;&#xD;&#xA;// 5. 筛选符合条件的坐标并存储结果&#xD;&#xA;string filteredCoordString = &quot;&quot;;  // 用于拼接筛选后的坐标字符串&#xD;&#xA;string place = &quot;A&quot;;              // 初始标记位（从A开始）&#xD;&#xA;&#xD;&#xA;// 遍历所有坐标字符串，筛选符合条件的坐标&#xD;&#xA;foreach (var coordStr in coordArray)&#xD;&#xA;{&#xD;&#xA;    // 将单个坐标按逗号分隔为x、y、z三个分量&#xD;&#xA;    var parts = coordStr.Split(',');&#xD;&#xA;    // 跳过格式不正确的坐标（必须包含x、y、z三个分量）&#xD;&#xA;    if (parts.Length != 3) &#xD;&#xA;        continue;&#xD;&#xA;&#xD;&#xA;    // 将字符串分量转换为浮点型数值（失败则跳过该坐标）&#xD;&#xA;    if (!float.TryParse(parts[0], out float x) || &#xD;&#xA;        !float.TryParse(parts[1], out float y) || &#xD;&#xA;        !float.TryParse(parts[2], out float z))&#xD;&#xA;        continue;&#xD;&#xA;&#xD;&#xA;    // 计算当前坐标与参考点（v:guanPosX, v:guanPosY）的相对位置&#xD;&#xA;    float dx = x - (float)${v:guanPosX};  // X方向距离差&#xD;&#xA;    float dy = (float)${v:guanPosY} - y;  // Y方向距离差（注意这里用参考点Y减去当前Y）&#xD;&#xA;    float distance = (float)Math.Sqrt(dx * dx + dy * dy);  // 计算直线距离&#xD;&#xA;&#xD;&#xA;    // 计算方向角度（弧度转角度，范围0-360度）&#xD;&#xA;    double radians = Math.Atan2(dx, dy);  // 计算弧度&#xD;&#xA;    double degrees = radians * (180 / Math.PI);  // 转换为角度&#xD;&#xA;    if (degrees &lt; 0)  // 确保角度在0-360度范围内&#xD;&#xA;        degrees += 360;&#xD;&#xA;&#xD;&#xA;    // 根据角度范围映射为方向编码（01-08，对应8个方向）&#xD;&#xA;    string direction = degrees &lt; 22.5  ? &quot;01&quot; :&#xD;&#xA;                      degrees &lt; 67.5  ? &quot;02&quot; :&#xD;&#xA;                      degrees &lt; 112.5 ? &quot;03&quot; :&#xD;&#xA;                      degrees &lt; 157.5 ? &quot;04&quot; :&#xD;&#xA;                      degrees &lt; 202.5 ? &quot;05&quot; :&#xD;&#xA;                      degrees &lt; 247.5 ? &quot;06&quot; :&#xD;&#xA;                      degrees &lt; 292.5 ? &quot;07&quot; :&#xD;&#xA;                      degrees &lt; 337.5 ? &quot;08&quot; : &quot;01&quot;;&#xD;&#xA;&#xD;&#xA;    // 根据距离范围映射为距离编码（2AED-2AEA，对应不同距离区间）&#xD;&#xA;    string distancestr = distance &gt; 200 ? &quot;2AED&quot; :&#xD;&#xA;                        distance &gt; 100 ? &quot;2AEC&quot; :&#xD;&#xA;                        distance &gt; 25  ? &quot;2AEB&quot; :&#xD;&#xA;                        distance &gt; 5   ? &quot;2AEA&quot; : &quot;&quot;;&#xD;&#xA;&#xD;&#xA;    // 筛选条件：方向编码和距离编码与参数匹配（param1和id为外部传入参数）&#xD;&#xA;    if (direction == $&quot;${param1}&quot; &amp;&amp; distancestr == $&quot;${id}&quot;)&#xD;&#xA;    {&#xD;&#xA;        // 拼接筛选结果（用分号分隔多个坐标）&#xD;&#xA;        if (string.IsNullOrEmpty(filteredCoordString))&#xD;&#xA;        {&#xD;&#xA;            filteredCoordString = coordStr;  // 第一个坐标直接赋值&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            filteredCoordString += &quot;;&quot; + coordStr;  // 后续坐标加前缀分号&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        // 在地图上标记当前坐标（使用当前place对应的标记位）&#xD;&#xA;        // 构造标记JSON：包含坐标值和激活状态（Active: true）&#xD;&#xA;        string markJson = $&quot;{{\&quot;{place}\&quot;: {{\&quot;X\&quot;: {x}, \&quot;Z\&quot;: {y}, \&quot;Y\&quot;: {z}, \&quot;Active\&quot;: true}}}}&quot;;&#xD;&#xA;        RealPlugin.plug.InvokeNamedCallback(&quot;place&quot;, markJson);&#xD;&#xA;&#xD;&#xA;        // 更新下一个标记位（按A→B→C→D→One→Two→Three→Four顺序循环）&#xD;&#xA;        string[] placeOrder = { &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;One&quot;, &quot;Two&quot;, &quot;Three&quot;, &quot;Four&quot; };&#xD;&#xA;        int currentIndex = Array.IndexOf(placeOrder, place);  // 获取当前标记位索引&#xD;&#xA;        &#xD;&#xA;        // 若未到最后一位，则切换到下一个标记位&#xD;&#xA;        if (currentIndex &gt;= 0 &amp;&amp; currentIndex &lt; placeOrder.Length - 1)&#xD;&#xA;        {&#xD;&#xA;            place = placeOrder[currentIndex + 1];&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// 6. 更新 v:guan 变量为筛选后的结果，并记录修改信息&#xD;&#xA;// 创建标量变量实例&#xD;&#xA;VariableScalar guanVar = new VariableScalar();&#xD;&#xA;guanVar.Value = filteredCoordString;&#xD;&#xA;guanVar.LastChanger = &quot;Mata&quot;; &#xD;&#xA;guanVar.LastChanged = DateTime.Now;&#xD;&#xA;&#xD;&#xA;Interpreter.StaticHelpers.SetScalarVariable(false, &quot;guan&quot;, guanVar);&#xD;&#xA;" ActionType="ExecuteScript" />
        </Actions>
      </Trigger>
      <Trigger Enabled="true" Name="1c.第二处罐子" Id="c44b7670-6cb4-4ea6-839e-5bc1a26c1bb3" RegularExpression="(?&lt;timestamp&gt;^.{14}) SystemLogMessage (?&lt;type&gt;29):(?&lt;instance&gt;8004002D):(?&lt;id&gt;2AF2):(?&lt;param0&gt;01):(?&lt;param1&gt;35AE):(?&lt;param2&gt;[^:]*)(?:$|:)">
        <Actions>
          <Action OrderNumber="1" UseTTSTextExpression="南边结束" VariableOp="SetString" VariableName="guan" VariableExpression="-676.4631,-769.7955,5;-823.9183,677.6934,140.00032;-886.4718,712.4964,107;-625.7809,810.8691,171;-813.9943,-663.3634,5;-842.8967,-125.0559,75.76903;-680.0345,739.9117,201;-793.0552,-777.3126,5;-708.6777,669.5714,171;-718.0424,-633.8791,5;-868.8489,-59.44909,67.5054;-803.5182,-602.7497,3;-732.2048,828.8491,139;-659.1158,-508.7968,12.198493;-785.997,790.5948,162.39513;-840.8771,-250.273,107.26465;-708.687,-139.3283,141.16982;-796.66,-228.9318,114.15647;-776.6315,-486.978,5;-758.8058,-183.164,127.66496" ActionType="Variable">
            <Condition Enabled="true" Grouping="Or">
              <ConditionSingle Enabled="true" ExpressionL="${_me.HasStatus(1531)}" ExpressionTypeL="Numeric" ExpressionR="1" ExpressionTypeR="Numeric" ConditionType="StringEqualNocase" />
            </Condition>
          </Action>
        </Actions>
      </Trigger>
    </Triggers>
  </ExportedFolder>
</TriggernometryExport>
